/****************************************************************************
    NOUVELLES TABLES

****************************************************************************/
PROMPT Creation de la table Utilisateurs
CREATE TABLE Utilisateurs (
    UtilisateurID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    Nom VARCHAR2(50),
    Prenom VARCHAR2(50),
    Email VARCHAR2(100),
    MotDePasse VARCHAR2(100),
    CONSTRAINT pk_utilisateur PRIMARY KEY (UtilisateurID)
);

COMMENT ON TABLE Utilisateurs IS 'Table contenant les informations des utilisateurs (clients)';
--

PROMPT Creation de la table Annonces
CREATE TABLE Annonces (
    AnnonceID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    UtilisateurID NUMBER,
    Titre VARCHAR2(100),
    Description VARCHAR2(500),
    PrixParNuit NUMBER,
    Localisation VARCHAR2(200),
    DateCreation DATE,
    CONSTRAINT pk_annonce PRIMARY KEY (AnnonceID),
    CONSTRAINT fk_utilisateur_annonce FOREIGN KEY (UtilisateurID) REFERENCES Utilisateurs(UtilisateurID)
);

COMMENT ON TABLE Annonces IS 'Table contenant les annonces de logements publiées par les utilisateurs';
--

PROMPT Creation de la table Reservations
CREATE TABLE Reservations (
    ReservationID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    UtilisateurID NUMBER,
    AnnonceID NUMBER,
    DateDebut DATE,
    DateFin DATE,
    Statut VARCHAR2(50),
    MontantTotal NUMBER,
    CONSTRAINT pk_reservation PRIMARY KEY (ReservationID),
    CONSTRAINT fk_utilisateur_reservation FOREIGN KEY (UtilisateurID) REFERENCES Utilisateurs(UtilisateurID),
    CONSTRAINT fk_annonce_reservation FOREIGN KEY (AnnonceID) REFERENCES Annonces(AnnonceID)
);

COMMENT ON TABLE Reservations IS 'Table contenant les réservations effectuées par les utilisateurs';

--
PROMPT Creation de la table Commentaires
CREATE TABLE Commentaires (
    CommentaireID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    UtilisateurID NUMBER,
    AnnonceID NUMBER,
    Note NUMBER,
    Commentaire VARCHAR2(500),
    DateCommentaire DATE,
    CONSTRAINT pk_commentaire PRIMARY KEY (CommentaireID),
    CONSTRAINT fk_utilisateur_commentaire FOREIGN KEY (UtilisateurID) REFERENCES Utilisateurs(UtilisateurID),
    CONSTRAINT fk_annonce_commentaire FOREIGN KEY (AnnonceID) REFERENCES Annonces(AnnonceID)
);

COMMENT ON TABLE Commentaires IS 'Table contenant les commentaires laissés par les utilisateurs sur les annonces';

--
PROMPT Creation de la table Photos
CREATE TABLE Photos (
    PhotoID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    AnnonceID NUMBER,
    URLPhoto VARCHAR2(200),
    Description VARCHAR2(500),
    CONSTRAINT pk_photo PRIMARY KEY (PhotoID),
    CONSTRAINT fk_annonce_photo FOREIGN KEY (AnnonceID) REFERENCES Annonces(AnnonceID)
);

COMMENT ON TABLE Photos IS 'Table contenant les photos associées aux annonces de logements';

--
PROMPT Creation de la table Messages
CREATE TABLE Messages (
    MessageID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ExpediteurUtilisateurID NUMBER,
    DestinataireUtilisateurID NUMBER,
    Contenu VARCHAR2(1000),
    DateEnvoi TIMESTAMP,
    CONSTRAINT pk_message PRIMARY KEY (MessageID),
    CONSTRAINT fk_expediteur FOREIGN KEY (ExpediteurUtilisateurID) REFERENCES Utilisateurs(UtilisateurID),
    CONSTRAINT fk_destinataire FOREIGN KEY (DestinataireUtilisateurID) REFERENCES Utilisateurs(UtilisateurID)
);

COMMENT ON TABLE Messages IS 'Table contenant les messages échangés entre utilisateurs';

--
PROMPT Creation de la table Utilisateurs_Annonces
CREATE TABLE Utilisateurs_Annonces (
    UtilisateurID NUMBER,
    AnnonceID NUMBER,
    CONSTRAINT pk_utilisateur_annonce PRIMARY KEY (UtilisateurID, AnnonceID),
    CONSTRAINT fk_utilisateur_anonce_utilisateur FOREIGN KEY (UtilisateurID) REFERENCES Utilisateurs(UtilisateurID),
    CONSTRAINT fk_utilisateur_annonce_annonce FOREIGN KEY (AnnonceID) REFERENCES Annonces(AnnonceID)
);

COMMENT ON TABLE Utilisateurs_Annonces IS 'Table de liaison entre Utilisateurs et Annonces';


CREATE TABLE Operations_Journal_Annonce (
    OperationID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    Type_operation VARCHAR2(10),
    AnnonceID NUMBER,
    UtilisateurOracle VARCHAR2(100),
    DateOperation DATE,
    Ancienne_valeur VARCHAR2(4000),
    Nouvelle_valeur VARCHAR2(4000),
    CONSTRAINT pk_operation_id PRIMARY KEY (OperationID),
    CONSTRAINT fk_operation_annonce FOREIGN KEY (AnnonceID) REFERENCES Annonces(AnnonceID)
);

COMMENT ON TABLE operations_journal_annonce IS 'Table tenant un journal des opérations sur la table annonces';
-- Script termine
PROMPT Les tables et les contraintes ont ete crees avec succes.
